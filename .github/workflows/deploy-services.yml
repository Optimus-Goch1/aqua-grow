name: Deploy All Services

on:
  push:
    branches:
      - main
    paths:
      - 'user_service/**'
      - 'sensor_service/**'
      - 'irrigation_service/**'
  workflow_dispatch:  # allows manual trigger from GitHub Actions UI

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # === Deploy USER SERVICE ===
      - name: Deploy User Service
        if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}
        run: |
          IMAGE_URI=${{ secrets.ECR_REPO_URI_USER_SERVICE }}:latest
          docker buildx build --load -t $IMAGE_URI ./user_service
          docker push $IMAGE_URI
          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER_NAME }} \
            --service ${{ secrets.ECS_SERVICE_USER }} \
            --force-new-deployment

      # === Deploy SENSOR SERVICE ===
      - name: Deploy Sensor Service
        if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}
        run: |
          IMAGE_URI=${{ secrets.ECR_REPO_URI_SENSOR_SERVICE }}:latest
          docker buildx build --load -t $IMAGE_URI ./sensor_service
          docker push $IMAGE_URI
          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER_NAME }} \
            --service ${{ secrets.ECS_SERVICE_SENSOR }} \
            --force-new-deployment

      # === Deploy IRRIGATION SERVICE ===
      - name: Deploy Irrigation Service
        if: ${{ github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}
        run: |
          IMAGE_URI=${{ secrets.ECR_REPO_URI_IRRIGATION_SERVICE }}:latest
          docker buildx build --load -t $IMAGE_URI ./irrigation_service
          docker push $IMAGE_URI
          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER_NAME }} \
            --service ${{ secrets.ECS_SERVICE_IRRIGATION }} \
            --force-new-deployment